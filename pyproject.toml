[project]
name = "mistral-ocr"
version = "0.1.0"
description = "A CLI and Streamlit tool to convert PDFs to Markdown using Mistral OCR."
readme = "README.md"
authors = [
    { name = "Samuel Mallet", email = "69467005+SuperMuel@users.noreply.github.com" },
]
requires-python = ">=3.12"
# Combine dependencies from both CLI and Streamlit parts
dependencies = [
    "mistralai>=1.5.1",
    "pyperclip>=1.9.0",
    "python-dotenv>=1.0.1",
    "streamlit>=1.43.1",
    "tqdm>=4.67.1",
    "typer[rich]>=0.15.2",
]

[project.scripts]
# This points to the main function in src/mistral_ocr/__init__.py
mistral-ocr = "mistral_ocr:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["coverage>=7.8.2", "fpdf2>=2.8.3", "pytest>=8.4.0", "ruff>=0.9.10"]

# Optional: Ruff configuration if using it
[tool.ruff]
exclude = ["*.ipynb"]


[tool.ruff.lint]
select = [
    "N",  # Enable all pep8-naming rules
    "E7", # Statements lints

    "UP006", # foo: list[int] = [1, 2, 3] instead of foo: List[int] = [1, 2, 3]
    "UP007", # Use X | Y for type annotations

    "ANN001", # Checks that function arguments have type annotations.
    "ANN201", # Missing return type annotation for public function {name}

    "SIM2", # Simplify boolean expressions

    "T20",  # Find uses of 'print' or 'pprint'
    "F401", # Report unused imports
]

[tool.pytest.ini_options]
markers = ["e2e: marks tests as end-to-end tests (deselected by default)"]
addopts = "-m 'not e2e'"
testpaths = ["tests"]
